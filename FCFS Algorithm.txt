//Implementation of FCFS Scheduling algorithm
#include <stdio.h>
//Finding waiting time 
void findWaitingTime(int process[] , int n , int burst_time[] , int waiting_time[]){
    //first process so zero
    waiting_time[0]=0;
    
    int i;
    //calculating wait time
    for(i=1;i<n;i++){
        waiting_time[i] = burst_time[i-1] + waiting_time[i-1];
    }
}

//Finding TurnArounfdTime
void findTurnAroundTime(int process[] ,int n , int burst_time[] ,int waiting_time[] , int tat[]){
    int i;
    //Calculating turn around = bt + waiting_time
    for(i=0;i<n;i++){
        tat[i] = burst_time[i] + waiting_time[i]; 
    }
}

//Finding Average Time
void findAvgTime(int process[] , int n, int burst_time[]){
    int waiting_time[n] , tat[n] , total_time=0 , total_waiting_time=0;
    
    //Finding Waiting time for each process
    findWaitingTime(process,n,burst_time,waiting_time);
    
    //Finding TurnAroundTime for each process
    findTurnAroundTime(process,n,burst_time,waiting_time,tat);
    
    //Displaying
    printf("\nProcesses  BurstTime  WaitingTime  TurnAroundTime\n");
    
    int i;
    for(i=0;i<n;i++){
        total_waiting_time += waiting_time[i];
        total_time += tat[i];
        printf("%d\t   %d\t\t    %d\t\t  %d\n",process[i],burst_time[i],waiting_time[i],tat[i]);
    } 
    //Calculating total waiting time and turn around
    int s = (float)total_waiting_time / (float)n;
    int t = (float)total_time / (float)n;
    
    printf("\nAverage Waiting time: %d",s);
    printf("\nAverage TurnAroundTime: %d",t);
    
}

int main()
{
    int process[] = {1,2,3};
    int n = sizeof(process) / sizeof(process[0]);
    
    int burst_time[] = {10,5,8};
    
    findAvgTime(process , n , burst_time);

    return 0;
}
